name: Release

on:
  push:
    branches: ['main']

permissions:
  id-token: write
  contents: read

env:
  DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost/${{ secrets.POSTGRES_DB }}?schema=public&host=/cloudsql/${{ secrets.DB_CONNECTION_STRING }}
  REGISTRY_HOST: ${{ vars.REGION }}-docker.pkg.dev
  IMAGE_REPOSITORY: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.AR_REPOSITORY_NAME }}/${{ vars.APP_IMAGE_NAME }}

jobs:
  integrations:
    runs-on: ubuntu-latest
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'actions/setup-node@v4'
        with:
          node-version: 20.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Type Check
        run: npx tsc

  deploy:
    needs: integrations
    runs-on: ubuntu-latest
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{secrets.SERVICE_ACCOUNT}}
      - uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'
      - name: Google Cloud への Docker 認証設定
        run: gcloud auth configure-docker ${{ env.REGISTRY_HOST }}
      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_REPOSITORY }} .
      - name: Push Docker Image
        run: docker push ${{ env.IMAGE_REPOSITORY }}
      - name: Deploy Docker Image
        run: |
          gcloud run deploy ${{ vars.AR_REPOSITORY_NAME }} \
            --image ${{ env.IMAGE_REPOSITORY }} \
            --platform managed \
            --region ${{ vars.REGION }} \
            --set-cloudsql-instances ${{ secrets.DB_CONNECTION_STRING }} \
            --port 3000 \
            --allow-unauthenticated \
            --set-env-vars DATABASE_URL="${{ env.DATABASE_URL }}" \
            --set-env-vars NEXTAUTH_URL="${{ secrets.NEXTAUTH_URL }}" \
            --set-env-vars NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}" \
            --set-env-vars GITHUB_ID="${{secrets.NEXTAUTH_GITHUB_ID}}" \
            --set-env-vars GITHUB_SECRET="${{ secrets.NEXTAUTH_GITHUB_SECRET}}"

  migration:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'actions/setup-node@v4'
        with:
          node-version: 20.x
          cache: npm
      - uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{secrets.SERVICE_ACCOUNT}}
      - name: Cloud SQL Auth Proxy 立ち上げ
        run: |
          curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.6.1/cloud-sql-proxy.linux.amd64
          chmod +x cloud-sql-proxy 
          sudo mkdir /cloudsql 
          sudo chmod 777 /cloudsql
          ./cloud-sql-proxy --unix-socket /cloudsql ${{ secrets.DB_CONNECTION_STRING }} &
      - name: Migration
        run: npx prisma migrate deploy
